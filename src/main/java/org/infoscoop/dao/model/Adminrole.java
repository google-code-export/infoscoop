package org.infoscoop.dao.model;

// Generated 2010/03/29 15:54:59 by Hibernate Tools 3.3.0.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Transient;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * IsAdminroles generated by hbm2java
 */
@Entity
@Table(name = "is_adminroles", uniqueConstraints = @UniqueConstraint(columnNames = "roleid"))
public class Adminrole implements java.io.Serializable {

	private Integer id;
	private String roleid;
	private String name;
	private String permission;
	private int allowdelete;
	private Set<Portaladmin> isPortaladminses = new HashSet<Portaladmin>(
			0);

	public Adminrole() {
	}

	public Adminrole(String roleid, String name, String permission,
			int allowdelete) {
		this.roleid = roleid;
		this.name = name;
		this.permission = permission;
		this.allowdelete = allowdelete;
	}

	public Adminrole(String roleid, String name, String permission,
			int allowdelete, Set<Portaladmin> isPortaladminses) {
		this.roleid = roleid;
		this.name = name;
		this.permission = permission;
		this.allowdelete = allowdelete;
		this.isPortaladminses = isPortaladminses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "roleid", unique = true, nullable = false)
	public String getRoleid() {
		return this.roleid;
	}

	public void setRoleid(String roleid) {
		this.roleid = roleid;
	}

	@Column(name = "name", nullable = false, length = 256)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "permission", nullable = false, length = 256)
	public String getPermission() {
		return this.permission;
	}

	public void setPermission(String permission) {
		this.permission = permission;
	}

	@Column(name = "allowdelete", nullable = false)
	public int getAllowdelete() {
		return this.allowdelete;
	}

	public void setAllowdelete(int allowdelete) {
		this.allowdelete = allowdelete;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "adminrole")
	public Set<Portaladmin> getPortaladmins() {
		return this.isPortaladminses;
	}

	public void setPortaladmins(Set<Portaladmin> isPortaladminses) {
		this.isPortaladminses = isPortaladminses;
	}

	@Transient
	public boolean isAllowDelete(){
		return getAllowdelete() > 0;
	}
}
